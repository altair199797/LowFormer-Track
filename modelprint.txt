LowFormer_Track(
  (backbone): LowFormerBackbone(
    (input_stem): OpSequential(
      (op_list): ModuleList(
        (0): ConvLayer(
          (conv): Conv2d(3, 20, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (norm): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
      )
    )
    (stages): ModuleList(
      (0): OpSequential(
        (op_list): ModuleList(
          (0): ResidualBlock(
            (main): FusedMBConv(
              (spatial_conv): ConvLayer(
                (conv): Conv2d(20, 120, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (norm): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (act): Hardswish()
              )
              (point_conv): ConvLayer(
                (conv): Conv2d(120, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (norm): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
          )
        )
      )
      (1): OpSequential(
        (op_list): ModuleList(
          (0): ResidualBlock(
            (main): FusedMBConv(
              (spatial_conv): ConvLayer(
                (conv): Conv2d(40, 240, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (norm): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (act): Hardswish()
              )
              (point_conv): ConvLayer(
                (conv): Conv2d(240, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (norm): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
          )
        )
      )
      (2): OpSequential(
        (op_list): ModuleList(
          (0): ResidualBlock(
            (main): FusedMBConv(
              (spatial_conv): ConvLayer(
                (conv): Conv2d(80, 480, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (norm): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (act): Hardswish()
              )
              (point_conv): ConvLayer(
                (conv): Conv2d(480, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (norm): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
          )
          (1): LowFormerBlock(
            (total): Sequential(
              (0): Sequential(
                (0): ResidualBlock(
                  (main): Sequential(
                    (0): GroupNorm(1, 160, eps=1e-05, affine=True)
                    (1): ConvAttention(
                      (conv_proj): Sequential(
                        (0): Conv2d(160, 160, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=160, bias=False)
                        (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                      )
                      (pwise): Sequential(
                        (0): Conv2d(160, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      )
                      (sda): SDALayer()
                      (o_proj): Identity()
                      (upsampling): ConvTranspose2d(80, 160, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
                    )
                  )
                  (shortcut): IdentityLayer()
                )
                (1): ResidualBlock(
                  (main): Sequential(
                    (0): GroupNorm(1, 160, eps=1e-05, affine=True)
                    (1): Conv2d(160, 640, kernel_size=(1, 1), stride=(1, 1))
                    (2): GELU(approximate=none)
                    (3): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1))
                  )
                  (shortcut): IdentityLayer()
                )
              )
              (1): ResidualBlock(
                (main): FusedMBConv(
                  (spatial_conv): ConvLayer(
                    (conv): Conv2d(160, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                    (norm): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                    (act): Hardswish()
                  )
                  (point_conv): ConvLayer(
                    (conv): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (shortcut): IdentityLayer()
              )
            )
          )
          (2): LowFormerBlock(
            (total): Sequential(
              (0): Sequential(
                (0): ResidualBlock(
                  (main): Sequential(
                    (0): GroupNorm(1, 160, eps=1e-05, affine=True)
                    (1): ConvAttention(
                      (conv_proj): Sequential(
                        (0): Conv2d(160, 160, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=160, bias=False)
                        (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                      )
                      (pwise): Sequential(
                        (0): Conv2d(160, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      )
                      (sda): SDALayer()
                      (o_proj): Identity()
                      (upsampling): ConvTranspose2d(80, 160, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
                    )
                  )
                  (shortcut): IdentityLayer()
                )
                (1): ResidualBlock(
                  (main): Sequential(
                    (0): GroupNorm(1, 160, eps=1e-05, affine=True)
                    (1): Conv2d(160, 640, kernel_size=(1, 1), stride=(1, 1))
                    (2): GELU(approximate=none)
                    (3): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1))
                  )
                  (shortcut): IdentityLayer()
                )
              )
              (1): ResidualBlock(
                (main): FusedMBConv(
                  (spatial_conv): ConvLayer(
                    (conv): Conv2d(160, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                    (norm): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                    (act): Hardswish()
                  )
                  (point_conv): ConvLayer(
                    (conv): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (shortcut): IdentityLayer()
              )
            )
          )
          (3): LowFormerBlock(
            (total): Sequential(
              (0): Sequential(
                (0): ResidualBlock(
                  (main): Sequential(
                    (0): GroupNorm(1, 160, eps=1e-05, affine=True)
                    (1): ConvAttention(
                      (conv_proj): Sequential(
                        (0): Conv2d(160, 160, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=160, bias=False)
                        (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                      )
                      (pwise): Sequential(
                        (0): Conv2d(160, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      )
                      (sda): SDALayer()
                      (o_proj): Identity()
                      (upsampling): ConvTranspose2d(80, 160, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
                    )
                  )
                  (shortcut): IdentityLayer()
                )
                (1): ResidualBlock(
                  (main): Sequential(
                    (0): GroupNorm(1, 160, eps=1e-05, affine=True)
                    (1): Conv2d(160, 640, kernel_size=(1, 1), stride=(1, 1))
                    (2): GELU(approximate=none)
                    (3): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1))
                  )
                  (shortcut): IdentityLayer()
                )
              )
              (1): ResidualBlock(
                (main): FusedMBConv(
                  (spatial_conv): ConvLayer(
                    (conv): Conv2d(160, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                    (norm): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                    (act): Hardswish()
                  )
                  (point_conv): ConvLayer(
                    (conv): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (shortcut): IdentityLayer()
              )
            )
          )
          (4): LowFormerBlock(
            (total): Sequential(
              (0): Sequential(
                (0): ResidualBlock(
                  (main): Sequential(
                    (0): GroupNorm(1, 160, eps=1e-05, affine=True)
                    (1): ConvAttention(
                      (conv_proj): Sequential(
                        (0): Conv2d(160, 160, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=160, bias=False)
                        (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                      )
                      (pwise): Sequential(
                        (0): Conv2d(160, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      )
                      (sda): SDALayer()
                      (o_proj): Identity()
                      (upsampling): ConvTranspose2d(80, 160, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
                    )
                  )
                  (shortcut): IdentityLayer()
                )
                (1): ResidualBlock(
                  (main): Sequential(
                    (0): GroupNorm(1, 160, eps=1e-05, affine=True)
                    (1): Conv2d(160, 640, kernel_size=(1, 1), stride=(1, 1))
                    (2): GELU(approximate=none)
                    (3): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1))
                  )
                  (shortcut): IdentityLayer()
                )
              )
              (1): ResidualBlock(
                (main): FusedMBConv(
                  (spatial_conv): ConvLayer(
                    (conv): Conv2d(160, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                    (norm): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                    (act): Hardswish()
                  )
                  (point_conv): ConvLayer(
                    (conv): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (shortcut): IdentityLayer()
              )
            )
          )
          (5): LowFormerBlock(
            (total): Sequential(
              (0): Sequential(
                (0): ResidualBlock(
                  (main): Sequential(
                    (0): GroupNorm(1, 160, eps=1e-05, affine=True)
                    (1): ConvAttention(
                      (conv_proj): Sequential(
                        (0): Conv2d(160, 160, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=160, bias=False)
                        (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                      )
                      (pwise): Sequential(
                        (0): Conv2d(160, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      )
                      (sda): SDALayer()
                      (o_proj): Identity()
                      (upsampling): ConvTranspose2d(80, 160, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
                    )
                  )
                  (shortcut): IdentityLayer()
                )
                (1): ResidualBlock(
                  (main): Sequential(
                    (0): GroupNorm(1, 160, eps=1e-05, affine=True)
                    (1): Conv2d(160, 640, kernel_size=(1, 1), stride=(1, 1))
                    (2): GELU(approximate=none)
                    (3): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1))
                  )
                  (shortcut): IdentityLayer()
                )
              )
              (1): ResidualBlock(
                (main): FusedMBConv(
                  (spatial_conv): ConvLayer(
                    (conv): Conv2d(160, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                    (norm): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                    (act): Hardswish()
                  )
                  (point_conv): ConvLayer(
                    (conv): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (shortcut): IdentityLayer()
              )
            )
          )
          (6): LowFormerBlock(
            (total): Sequential(
              (0): Sequential(
                (0): ResidualBlock(
                  (main): Sequential(
                    (0): GroupNorm(1, 160, eps=1e-05, affine=True)
                    (1): ConvAttention(
                      (conv_proj): Sequential(
                        (0): Conv2d(160, 160, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=160, bias=False)
                        (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                      )
                      (pwise): Sequential(
                        (0): Conv2d(160, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      )
                      (sda): SDALayer()
                      (o_proj): Identity()
                      (upsampling): ConvTranspose2d(80, 160, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
                    )
                  )
                  (shortcut): IdentityLayer()
                )
                (1): ResidualBlock(
                  (main): Sequential(
                    (0): GroupNorm(1, 160, eps=1e-05, affine=True)
                    (1): Conv2d(160, 640, kernel_size=(1, 1), stride=(1, 1))
                    (2): GELU(approximate=none)
                    (3): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1))
                  )
                  (shortcut): IdentityLayer()
                )
              )
              (1): ResidualBlock(
                (main): FusedMBConv(
                  (spatial_conv): ConvLayer(
                    (conv): Conv2d(160, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                    (norm): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                    (act): Hardswish()
                  )
                  (point_conv): ConvLayer(
                    (conv): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (norm): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  )
                )
                (shortcut): IdentityLayer()
              )
            )
          )
        )
      )
    )
  )
  (neck): Identity()
  (box_head): MLPCenterPredictor(
    (layers_ctr): ModuleList(
      (0): Linear(in_features=160, out_features=160, bias=True)
      (1): Linear(in_features=160, out_features=160, bias=True)
      (2): Linear(in_features=160, out_features=1, bias=True)
    )
    (layers_offset): ModuleList(
      (0): Linear(in_features=160, out_features=160, bias=True)
      (1): Linear(in_features=160, out_features=160, bias=True)
      (2): Linear(in_features=160, out_features=2, bias=True)
    )
    (layers_size): ModuleList(
      (0): Linear(in_features=160, out_features=160, bias=True)
      (1): Linear(in_features=160, out_features=160, bias=True)
      (2): Linear(in_features=160, out_features=2, bias=True)
    )
  )
)